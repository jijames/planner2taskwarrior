#!/bin/bash
#
# Script to convert planner plans (tasks) into taskwarrior tasks
# Authors: Joshua James (joshua@cybercrimetech.com)
# License: GPLv3
# Version: 0.1
#
# Requirements: Planner, taskwarrior (tested with 2.5.1)
#
printUsage(){
   echo "Usage: $0 [user] plannerXml"
   echo "	plannerXml: an XML file generated by planner"
   exit 1
}

if [ ! -f "$1" ]; then
	printUsage
	exit 1
fi



projName=$(egrep "project name" $1 | awk -F'"' '{print $2}')
egrep "<task |predecessor-id" $1 | while read -r line ; do
	if [[ $line != *"predecessor"* ]]; then  # use to detect prior tasks
		#echo "This is a task"
		#echo $line | sed -r 's/[^\"]*([\"][^\"]*[\"][,]?)[^\"]*/\1 /g' #| sed 's/\"//g'
		name=$(echo $line | awk -F'"' '{print $4}')
		id=$(echo $line | awk -F'"' '{print $2}')
		wait=$(echo $line | awk -F'"' '{print $10}')
		end=$(echo $line | awk -F'"' '{print $12}')
		#echo "The name is $name and the id is $id"
		#echo "Start time $wait end time $end"
		# Check if task has been completed. If yes - skip
		task complete "$name" &> /dev/null
		if [ $? == 1 ]; then
			task list | grep "$name" > /dev/null
			if [ $? == 0 ]; then
				#echo "Task already exists and is not done" # get id and modify timestamps
				taskID=$(task list | grep "$name" | awk '{print $1}') > /dev/null
				#echo "Task ID is $taskID"
				task $taskID modify due:$end wait:$wait &> /dev/null
				#exit 0
			else
				#echo "Task does not exist yet" # create task
				task add project:"$projName" due:$end wait:$wait $name &> /dev/null
				#exit 0
			fi
		fi
	fi
done


#closed=($(task completed))
#printUsage
